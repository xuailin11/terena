ip  172.40.50.117    vnc 7000

庞丽静  静静

panglj@tedu.cn

1903   13   402   

学生

不迟到 不早退  认证听讲  专心做实验

第三阶段 （数据库管理员  DBA ）     （运维工程师 DBA）
1  RDBMS---MYSQL     2 NOsql---Redis  3 监控与安全

RDBMS1---day01
一、搭建数据库服务器
	1.1 相关概念
	1.2 在50主机部署mysql数据库服务      练习到 11：35
		解包
		安装软件包
		启动mysqld服务
		查看服务进程和端口
		查看初始登陆密码
		使用初始密码登陆
		修改登陆密码
		断开连接
		使用修改后的密码登陆
		修改密码策略
		根据新密码策略设置密码
		使用新密码登陆

]# tar -xvf  mysql-5.7.17.tar 
]# ls *.rpm
]# yum -y  install mysql-community-*.rpm
]# systemctl  start mysqld
]# ls  /var/lib/mysql
]# systemctl  enable mysqld
]# netstat  -utnlp  | grep  :3306
]# ps -C  mysqld

		]# grep  password  /var/log/mysqld.log 
		]# mysql -hlocalhost -uroot -p'f<tbekh-d8Y!'
		mysql> alter user  root@"localhost" identified by "123qqq...A";
		mysql> exit

]# mysql  -uroot -p123qqq...A
mysql> show variables like "%password%";
mysql> set global validate_password_length=6;
mysql> set global validate_password_policy=0;
mysql> alter user  root@"localhost" identified by "tarena";
mysql> exit

	]# mysql  -uroot -ptarena
	]# vim /etc/my.cnf
		[mysqld]
		validate_password_length=6
		validate_password_policy=0
	:wq

二、数据库服务的基本使用
	2.1 连接方式
	2.2 数据存储流程 ?
	2.3 mysql管理环境 (SQL命令)

练习25分钟到 13：55
	2.4 库管理命令 （创建新库 查看已有的库 切换库 删除库 库名命名规则）
	2.5 表管理命令 （查看已有的表  创建新表 查看表结构 查看表记录）
	2.6 记录管理命令（查看已有记录 插入新记录 修改记录 删除记录）

设置表记录可以写中文
		]# LANG="zh_CN.UTF-8"
mysql> create table db1.学生表(
   姓名 char(10), 
   家庭地址 char(20) 
   ) DEFAULT CHARSET=utf8;

mysql> insert into db1.学生表 values("张三丰","武当山");
mysql> insert into db1.学生表 values("张四丰","武台山");
mysql> select  * from  db1.学生表;

						
三、MySQL数据类型
	3.1 字符类型  char   varchar

	3.2 数值类型  练习到 15：35 
		整数类型  tinyint  smallint int  bigint
		浮点类型  float  double
mysql> create table db1.t5 (name char(10), level  tinyint );
mysql> insert into  db1.t5 values ("zbj",-1);
mysql> insert into  db1.t5 values ("zbj",-129);
mysql> insert into  db1.t5 values ("zbj",198);

mysql> create table db1.t6 (name char(10), level  tinyint unsigned);
mysql> insert into  db1.t6 values ("zbj",-1);
mysql> insert into  db1.t6 values ("zbj",0);
mysql> insert into  db1.t6 values ("zbj",256);
mysql> insert into  db1.t6 values ("zbj",25);
mysql> insert into  db1.t6 values ("zbj",25.22);
mysql> insert into  db1.t6 values ("zbj",25.52);

mysql> create  table db1.t3(pay float , id double);
mysql> insert into db1.t3 values(9999.23,9999.77);

mysql> create  table db1.t4( pay float(5,2) , id double(4,2) );
mysql> insert into db1.t4 values(9999.23,9999.77);

mysql> create table  db1.t7(stu_num int , name char(5) , 
       age tinyint ,pay float ,money float(7,2) );

mysql> desc  db1.t7 ;
				练习到 15：45 

	3.3 日期时间类型
		年    日期   时间   日期时间
		year  date   time   datetime/ timestamp

create table db1.t8(      休息到 16：15  
name  char(15),
your_s    year,
birthday  date,
up_class  time,
party  datetime
);

desc  db1.t8 ;

insert into  db1.t8  values
("bob",1990,20191120,083000,20190607203000);

当year类型 使用2位数赋值时：
01~69视为  2001~2069
70~99视为  1970~1999
insert into  db1.t8  values
("tom",77,20191120,083000,20190607203000);

select  * from  db1.t8 ;
	
当未给timestamp字段赋值时，自动以当前系统时间赋值，而datetime 值为 NULL (空)

create table  db1.t9(  练习到 16:30 
meetting  datetime,
party	  timestamp
) ;

insert into  db1.t9 values (20190606162000,20190606162000);

insert into  db1.t9(meetting) values (20180707093000);

insert into  db1.t9(party) values (20160707093000);

select  *  from  db1.t9;

可以使用时间函数给字段赋值

mysql> insert into db1.t8 values
( "jack" , year(now()) , date(now()) , curtime() , now()  );

	3.4 枚举类型
	enum 单选
	set  多选

create table db1.t10 (
 name  char(10),
 sex   enum("boy","girl","no"),
 likes set("eat","game","piao","du","film")
);


mysql> desc db1.t10;

insert into  db1.t10 values ("jack","man","a,b,c");
insert into  db1.t10 values ("jack","boy","eat,piao");

select  * from  db1.t10 ;

RDBMS1_day01 内容总结 
一、搭建的mysql数据库服务器：什么是数据库？ 数据库服务软件？
			        mysql优点？ 应用场景？ LAMP / LNMP 
			      安装mysql软件 启动服务  使用初始密码登陆
				修改登陆密码  设置密码策略

二、基本使用？ 把数据库存储到mysql服务器上的步骤 ？
	       连接方式？
	       库的基本管理命令 表的基本管理命令  记录管理
		SQL命令使用规则

三、数据类型： 字符  数值  日期时间  枚举



+++++++++RDBMS1_day02
一、表结构
	2.1 约束条件 
		作用：限制给表字段赋值
		查看字段的约束条件： desc 库.表；
		约束条件包括那些： 
				 是否允许为空 (null)    not null
				 键值
				 默认值  default 值
				 额外设置

mysql> create table db1.t21(
    -> name char(10) not null,
    -> age  tinyint  unsigned  default  25,
    -> sex  enum("m","w") not null  default "w"
    -> );
mysql> insert into  db1.t21(name)values("jerry");
mysql> insert into  db1.t21    values("bob",29,"m");

mysql> insert into  db1.t21    values(null,null,null);

mysql> insert into  db1.t21    values("null",null,null);
ERROR 1048 (23000): Column 'sex' cannot be null
mysql> 

mysql> insert into  db1.t21    values("null",null,"m");
mysql> select  * from  db1.t21;


	2.2 修改表结构
		命令格式  alter  table  库.表 执行动作;
		执行动作包括如下：
	        		add  添加新字段
mysql> alter table db1.t10  add  email  varchar(50) default "stu@tedu.cn" ;
mysql> alter table  db1.t10 add  stu_num char(9) first;
mysql> alter table db1.t10  add  age  tinyint  unsigned  not null default 19  after name;

练习到 10：25 

				drop 删除已有字段
mysql> alter table db1.t10 drop email ,drop stu_num ;

				modify  修改字段类型
注意：修改的字段类型与已经存储的数据冲突时，不允许修改类型

mysql> alter table db1.t10  modify  name varchar(15)   default  "" ;


mysql> alter table db1.t10 
           modify age tinyint unsigned not null default 19 after sex;

				change  修改字段名
mysql> alter table  db1.t10 
           change likes loves set('eat','game','piao','du','film') ;
				rename  修改表名

mysql> alter table db1.t10 rename db1.classinfo;

		休息到 11：15 
二、MySQL 键值
	键值类型：
		普通索引 index  ***
		唯一索引 unique
		主    键 primary  key ***
		外    键 foreign  key ***
		全文索引 fulltext

	作用：约束如何给字段赋值

	普通索引（index）
		什么是索引（索引介绍）
		为什么要使用索引（索引优点与缺点）
		使用索引：
			 使用规则 ？
			 查看 desc  库.表  key 
			      show   index  from  表名 \G;			        

			 创建索引:
				建表时创建索引字段
					create  table db1.t22(
						class  char(9),
						name  char(15),
						age int,
						index(name),index(age)
					 );

					desc  db1.t22;

				        show index  from  db1.t22\G;

				在已有表里创建索引字段
					mysql> create index xixi 
							on  stuinfo(name);

			 删除索引:
				mysql> drop  index  name on t22;

	2.2 主    键 primary  key
			作用：限制字段赋值
			使用规则？
			使用主键：
				1 创建主键
					1.1 建表时创建主键
mysql> create table  db1.t23(
    -> name char(10) primary key,
    -> age int,
    -> pay float(7,2) 
    -> );

mysql> desc  db1.t23 ;
mysql> insert into  db1.t23 values(null,19,28800.88);
mysql> insert into  db1.t23 values("bob",19,28800.88);
mysql> insert into  db1.t23 values("bob",29,38800.88);

					1.2 在已有表里添加主键
		mysql> select  * from  db1.classinfo;
		mysql> delete from  db1.classinfo;
		mysql> alter table  db1.classinfo add  primary key(name);
		mysql> desc  db1.classinfo;

练习到 14：45

				2 创建复合主键
				    约束方式： 主键字段的值不可以同时重复
	PRI       PRI
	clientip  serport  status   
 	1.1.1.1   22        yes
	1.1.1.1   22        yes

create table db1.t24(
clientip  char(15),
serport	  int,
status    enum("yes","no"),
primary key(clientip,serport)
);

mysql> insert into db1.t24 values ("1.1.1.1",22,"yes");
mysql> insert into db1.t24 values ("1.1.1.1",22,"no");
mysql> insert into db1.t24 values ("1.1.1.1",22,"yes");
mysql> insert into db1.t24 values ("1.1.1.1",25,"yes");
mysql> insert into db1.t24 values ("1.1.1.1",25,"no");
mysql> insert into db1.t24 values ("2.1.1.1",25,"no");

				3 primary key与auto_increment连用
						自增长
						赋值时 字段的值字段加1

 id  name  age sex
 1   bob   19  boy
 2  tom   21  boy
 3  jerry  25  boy
 4  lucy   18  girl

create table  db1.t25(
 id int primary key  auto_increment,
 name char(15),
 age tinyint ,
 sex enum("boy","girl")
);

mysql> desc db1.t25 ;

mysql> insert into  db1.t25(name,age,sex)values("bob",19,"boy");

mysql> insert into  db1.t25(name,age,sex)values("tom",21,"boy");

mysql> select  * from  db1.t25;

mysql> insert into db1.t25 values (6,"bob",19,"girl");
mysql> select  * from  db1.t25;

mysql> insert into  db1.t25(name,age,sex)values("jack",27,"boy");
mysql> select  * from  db1.t25;

mysql> delete from   db1.t25;
mysql> select  * from db1.t25;

mysql> insert into  db1.t25(name,age,sex)values("jack",27,"boy");
mysql> select  * from db1.t25;

				4 删除主键
				mysql> alter table db1.t23 drop  primary key;

				mysql> alter table  db1.t24 drop primary key;

			mysql> alter table  db1.t25  modify id int;
			mysql> alter table  db1.t25 drop  primary key;
 
				
	2.3 外    键 foreign  key
			作用：限制给字段赋值，插入记录时，
				     字段值在另一个表字段值范围内选择。

			使用规则:
				1 表存储引擎必须是innodb
				2 字段类型要一致
				3 被参照字段必须要是键值类型的某一种，通常是p					rimary key

			命令格式：

			create table 库.表（
				字段列表，
   foreign   key(字段名)  references  表名(字段名) 
   on  update  cascade       
   on  delete    cascade
   )engine=innodb;


yg 员工表
	编号 姓名 
 	1    bob
	2    tom
 	3    bob

create table db1.yg(
yg_id int  primary key auto_increment,
name  char(20)
)engine=innodb;

insert into db1.yg(name)values("bob");
insert into db1.yg(name)values("tom");
insert into db1.yg(name)values("bob");
select  * from  db1.yg;
gz 工资表
	编号 工资
	 1   30000  
	 2   50000

create table db1.gz(
gz_id int,
pay  float(7,2),
foreign key(gz_id) references yg(yg_id) 
on  update  cascade on delete cascade
)engine=innodb;
	 
mysql> desc db1.gz;
mysql> show create table db1.gz\G;
mysql> select  * from  db1.gz;

			测试外键：
mysql> insert into db1.gz values(4,50000);

ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`db1`.`gz`, CONSTRAINT `gz_ibfk_1` FOREIGN KEY (`gz_id`) REFERENCES `yg` (`yg_id`) ON DELETE CASCADE ON UPDATE CASCADE)


mysql> insert into db1.gz values(1,50000);

mysql> insert into db1.gz values(2,45000);

mysql> insert into db1.gz values(3,35000);

mysql> select  * from db1.gz;

					练习 到 17：52 

mysql> update db1.yg  set yg_id=4 where yg_id=3;
mysql> select  * from  db1.yg;
mysql> select  * from  db1.gz;


mysql> delete from db1.yg where yg_id=1;
mysql> select  * from  db1.yg;
mysql> select  * from  db1.gz;

mysql> delete from db1.gz;
mysql> alter table db1.gz add primary key(gz_id);

		删除外键
			mysql> show create table db1.gz\G;
			mysql> alter table db1.gz drop foreign key gz_ibfk_1;


		50  51 52 53

		前任信息表
		婚宴邀请表 （邀请人必须在前任信息表里选）

